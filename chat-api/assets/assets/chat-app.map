{"version":3,"sources":["chat-app/app.js","chat-app/controllers/application.js","chat-app/helpers/format-date.js","chat-app/initializers/export-application-global.js","chat-app/router.js","chat-app/routes/application.js","chat-app/templates/application.js","chat-app/tests/app.jshint.js","chat-app/tests/chat-app/tests/helpers/resolver.jshint.js","chat-app/tests/chat-app/tests/helpers/start-app.jshint.js","chat-app/tests/chat-app/tests/test-helper.jshint.js","chat-app/tests/chat-app/tests/unit/controllers/application-test.jshint.js","chat-app/tests/chat-app/tests/unit/helpers/format-date-test.jshint.js","chat-app/tests/chat-app/tests/unit/routes/application-test.jshint.js","chat-app/tests/chat-app/tests/unit/views/application-test.jshint.js","chat-app/tests/controllers/application.jshint.js","chat-app/tests/helpers/format-date.jshint.js","chat-app/tests/helpers/resolver.js","chat-app/tests/helpers/start-app.js","chat-app/tests/router.jshint.js","chat-app/tests/routes/application.jshint.js","chat-app/tests/test-helper.js","chat-app/tests/unit/controllers/application-test.js","chat-app/tests/unit/helpers/format-date-test.js","chat-app/tests/unit/routes/application-test.js","chat-app/tests/unit/views/application-test.js","chat-app/tests/views/application.jshint.js","chat-app/views/application.js","vendor/ember-cli/app-suffix.js"],"sourcesContent":["define(\"chat-app/app\", \n  [\"ember\",\"ember/resolver\",\"ember/load-initializers\",\"chat-app/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Resolver = __dependency2__[\"default\"];\n    var loadInitializers = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    Ember.MODEL_FACTORY_INJECTIONS = true;\n\n    var App = Ember.Application.extend({\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix,\n      Resolver: Resolver\n    });\n\n    loadInitializers(App, config.modulePrefix);\n\n    __exports__[\"default\"] = App;\n  });","define(\"chat-app/controllers/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    /* global io */\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.ObjectController.extend(Ember.Evented, {\n\n      usernameIsSet: false,\n      filterQuery: \"\",\n      chat: \"\",\n      chats: [],\n      filteredChat: [],\n      userlist: [],\n      socket: null,\n      useTranscript: \"chats\",\n\n      transcript: (function () {\n        return this.get(this.get(\"useTranscript\"));\n      }).property(\"useTranscript\", \"filteredChat\"),\n\n      filterTranscript: (function () {\n        Ember.run.debounce(this, function () {\n          var term = this.get(\"filterQuery\"),\n              query = new RegExp(\"(\" + term + \")\", \"ig\"),\n              chats = this.get(\"chats\"),\n              filtered = Ember.A();\n\n          if (!term) {\n            this.set(\"useTranscript\", \"chats\");\n          } else {\n            chats.forEach(function (chat) {\n              if (chat.message.match(query)) {\n                filtered.push(chat);\n              }\n            });\n\n            this.set(\"filteredChat\", filtered);\n\n            if (this.get(\"useTranscript\") !== \"filteredChat\") {\n              this.set(\"useTranscript\", \"filteredChat\");\n            }\n          }\n        }, 500);\n      }).observes(\"filterQuery\"),\n\n      io_connect: function (username) {\n        var socket = io.connect(document.URL);\n        this.set(\"socket\", socket);\n        socket.emit(\"identify\", username);\n\n        socket.on(\"newconnection\", (function (data) {\n          this.get(\"userlist\").push(data);\n        }).bind(this));\n\n        socket.on(\"chat\", (function (data) {\n          this.get(\"chats\").pushObject(data);\n          this.trigger(\"scrollTranscript\");\n        }).bind(this));\n\n        socket.on(\"userlist\", (function (data) {\n          this.set(\"userlist\", data);\n        }).bind(this));\n      },\n\n      actions: {\n\n        sendChat: function () {\n          // Push the message into the transcript\n          this.get(\"chats\").pushObject({\n            message: this.get(\"chat\"),\n            nickname: \"You\",\n            time: new Date().getTime(),\n            self: true\n          });\n\n          // Push the message to the server\n          this.get(\"socket\").emit(\"chat\", {\n            message: this.get(\"chat\"),\n            time: new Date().getTime() // Doing the time client side\n          });\n\n          // Clear the input\n          this.set(\"chat\", \"\");\n\n          this.trigger(\"scrollTranscript\");\n        },\n\n        setusername: function () {\n          var username = this.get(\"username\");\n\n          if (username) {\n            this.io_connect(username); // Connect to the web socket service\n            this.set(\"usernameIsSet\", true); // Show the chat room\n          } else {\n            this.trigger(\"no_username\"); // username is required :: make things red\n          }\n        },\n\n        clearFilterQuery: function () {\n          this.set(\"filterQuery\", \"\"); // Clear the input\n          this.set(\"useTranscript\", \"chats\"); // choose the chats array as the transcript\n        }\n      }\n    });\n  });","define(\"chat-app/helpers/format-date\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    /* format-date\n    *@param input > type: non-scalar (must be able to be parsed by moment.js)\n    */\n    function formatDate(input) {\n      return new moment(input).format(\"llll\");\n    }\n\n    __exports__.formatDate = formatDate;\n    __exports__[\"default\"] = Ember.Handlebars.makeBoundHelper(formatDate);\n  });","define(\"chat-app/initializers/export-application-global\", \n  [\"ember\",\"chat-app/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    function initialize(container, application) {\n      var classifiedName = Ember.String.classify(config.modulePrefix);\n\n      if (config.exportApplicationGlobal) {\n        window[classifiedName] = application;\n      }\n    };\n    __exports__.initialize = initialize;\n\n    __exports__[\"default\"] = {\n      name: \"export-application-global\",\n\n      initialize: initialize\n    };\n  });","define(\"chat-app/router\", \n  [\"ember\",\"chat-app/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var Router = Ember.Router.extend({\n      location: config.locationType\n    });\n\n    Router.map(function () {});\n\n    __exports__[\"default\"] = Router;\n  });","define(\"chat-app/routes/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n      model: function () {\n        return {\n          username: \"\"\n        };\n      }\n    });\n  });","define(\"chat-app/templates/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,'>= 1.0.0'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = '', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = '', helper, options;\n      data.buffer.push(\"\\n    <div class=\\\"jumbotron\\\">\\n      <div class=\\\"well\\\">\\n        <h1>Chat-App</h1>\\n        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque vitae dapibus odio, lacinia dignissim arcu.</p>\\n        <p>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-12\\\">\\n              <h4>Choose Your Screen Name To Get Started!</h4>\\n\\n              <form class=\\\"form-horizontal\\\">\\n                <fieldset>\\n                  <div class=\\\"form-group\\\" id=\\\"screenNameGroup\\\">\\n                    <label for=\\\"screenName\\\" class=\\\"col-lg-2 control-label\\\">Screen Name</label>\\n                    <div class=\\\"col-lg-10\\\">\\n                      \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        'value': (\"username\"),\n        'class': (\"form-control\"),\n        'id': (\"screenName\"),\n        'placeholder': (\"Screen Name\")\n      },hashTypes:{'value': \"ID\",'class': \"STRING\",'id': \"STRING\",'placeholder': \"STRING\"},hashContexts:{'value': depth0,'class': depth0,'id': depth0,'placeholder': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n                    </div>\\n                  </div>\\n\\n                  <div class=\\\"form-group\\\">\\n                    <div class=\\\"col-lg-10 col-lg-offset-2\\\">\\n                      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"setusername\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">Chat</button>\\n                    </div>\\n                  </div>\\n                  \\n                </fieldset>\\n              </form>\\n            </div>\\n          </div>\\n        </p>\\n      </div>\\n    </div>\\n\");\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = '', stack1, helper, options;\n      data.buffer.push(\"\\n    <div class=\\\"col-sm-12 well\\\">\\n      <h4>People in here</h4>\\n      \");\n      stack1 = helpers._triageMustache.call(depth0, \"userlist\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    </div>\\n\\n    <hr/>\\n    <section id=\\\"chat\\\">\\n      <ul class=\\\"chat-thread\\\">\\n          \");\n      stack1 = helpers.each.call(depth0, \"transcript\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n      </ul>\\n\\n      <form class=\\\"chat-window\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-12 col-md-10\\\">\\n            \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        'class': (\"chat-window-message\"),\n        'autocomplete': (\"off\"),\n        'autofocus': (\"true\"),\n        'placeholder': (\"Type your message\"),\n        'value': (\"chat\")\n      },hashTypes:{'class': \"STRING\",'autocomplete': \"STRING\",'autofocus': \"STRING\",'placeholder': \"STRING\",'value': \"ID\"},hashContexts:{'class': depth0,'autocomplete': depth0,'autofocus': depth0,'placeholder': depth0,'value': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n          </div>\\n          <br class=\\\"visible-sm-*\\\"/>\\n          <div class=\\\"col-sm-12 col-md-2 text-left\\\">\\n            <button class=\\\"btn btn-success\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"sendChat\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">Send</button>\\n          </div>\\n          </div>\\n      </form>\\n      </section>\\n\");\n      return buffer;\n      }\n    function program4(depth0,data) {\n      \n      var buffer = '', stack1, helper, options;\n      data.buffer.push(\"\\n            <li \");\n      data.buffer.push(escapeExpression(helpers['bind-attr'].call(depth0, {hash:{\n        'class': (\"self:mine:theirs\")\n      },hashTypes:{'class': \"STRING\"},hashContexts:{'class': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\\n              <div class=\\\"sender\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"nickname\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</div>\\n              <div class=\\\"chat-date\\\">\");\n      data.buffer.push(escapeExpression((helper = helpers['format-date'] || (depth0 && depth0['format-date']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"time\", options) : helperMissing.call(depth0, \"format-date\", \"time\", options))));\n      data.buffer.push(\"</div>\\n              \");\n      stack1 = helpers._triageMustache.call(depth0, \"message\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n            </li>\\n          \");\n      return buffer;\n      }\n\n      data.buffer.push(\"<div class=\\\"navbar navbar-inverse\\\">\\n  <div class=\\\"navbar-header\\\">\\n    <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" data-toggle=\\\"collapse\\\" data-target=\\\".navbar-inverse-collapse\\\">\\n      <span class=\\\"icon-bar\\\"></span>\\n      <span class=\\\"icon-bar\\\"></span>\\n      <span class=\\\"icon-bar\\\"></span>\\n    </button>\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Prototype</a>\\n  </div>\\n  <div class=\\\"navbar-collapse collapse navbar-inverse-collapse\\\">\\n    <ul class=\\\"nav navbar-nav\\\">\\n      <li class=\\\"active\\\"><a href=\\\"#\\\">Chat App</a></li>\\n      <li><a href=\\\"http://github.com/charliemitchell/\\\">My Github</a></li>\\n    </ul>\\n    \\n    \\n\\n    <ul class=\\\"nav navbar-nav navbar-right\\\">\\n      <li>\\n        <form class=\\\"navbar-form navbar-left\\\">\\n          \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        'value': (\"filterQuery\"),\n        'class': (\"form-control\"),\n        'placeholder': (\"Live Filter Transcript\")\n      },hashTypes:{'value': \"ID\",'class': \"STRING\",'placeholder': \"STRING\"},hashContexts:{'value': depth0,'class': depth0,'placeholder': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n        </form>\\n      </li>\\n      <li class=\\\"hasAction\\\">\\n        <a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clearFilterQuery\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">Clear</a>\\n      </li>\\n    </ul>\\n  </div>\\n</div>\\n\\n\");\n      stack1 = helpers.unless.call(depth0, \"usernameIsSet\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n\");\n      stack1 = helpers['if'].call(depth0, \"usernameIsSet\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      return buffer;\n      \n    });\n  });","define(\"chat-app/tests/app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - .');\n    test('app.js should pass jshint', function() { \n      ok(true, 'app.js should pass jshint.'); \n    });\n  });","define(\"chat-app/tests/chat-app/tests/helpers/resolver.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - chat-app/tests/helpers');\n    test('chat-app/tests/helpers/resolver.js should pass jshint', function() { \n      ok(true, 'chat-app/tests/helpers/resolver.js should pass jshint.'); \n    });\n  });","define(\"chat-app/tests/chat-app/tests/helpers/start-app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - chat-app/tests/helpers');\n    test('chat-app/tests/helpers/start-app.js should pass jshint', function() { \n      ok(true, 'chat-app/tests/helpers/start-app.js should pass jshint.'); \n    });\n  });","define(\"chat-app/tests/chat-app/tests/test-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - chat-app/tests');\n    test('chat-app/tests/test-helper.js should pass jshint', function() { \n      ok(true, 'chat-app/tests/test-helper.js should pass jshint.'); \n    });\n  });","define(\"chat-app/tests/chat-app/tests/unit/controllers/application-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - chat-app/tests/unit/controllers');\n    test('chat-app/tests/unit/controllers/application-test.js should pass jshint', function() { \n      ok(true, 'chat-app/tests/unit/controllers/application-test.js should pass jshint.'); \n    });\n  });","define(\"chat-app/tests/chat-app/tests/unit/helpers/format-date-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - chat-app/tests/unit/helpers');\n    test('chat-app/tests/unit/helpers/format-date-test.js should pass jshint', function() { \n      ok(true, 'chat-app/tests/unit/helpers/format-date-test.js should pass jshint.'); \n    });\n  });","define(\"chat-app/tests/chat-app/tests/unit/routes/application-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - chat-app/tests/unit/routes');\n    test('chat-app/tests/unit/routes/application-test.js should pass jshint', function() { \n      ok(true, 'chat-app/tests/unit/routes/application-test.js should pass jshint.'); \n    });\n  });","define(\"chat-app/tests/chat-app/tests/unit/views/application-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - chat-app/tests/unit/views');\n    test('chat-app/tests/unit/views/application-test.js should pass jshint', function() { \n      ok(true, 'chat-app/tests/unit/views/application-test.js should pass jshint.'); \n    });\n  });","define(\"chat-app/tests/controllers/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - controllers');\n    test('controllers/application.js should pass jshint', function() { \n      ok(true, 'controllers/application.js should pass jshint.'); \n    });\n  });","define(\"chat-app/tests/helpers/format-date.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - helpers');\n    test('helpers/format-date.js should pass jshint', function() { \n      ok(true, 'helpers/format-date.js should pass jshint.'); \n    });\n  });","define(\"chat-app/tests/helpers/resolver\", \n  [\"ember/resolver\",\"chat-app/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Resolver = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var resolver = Resolver.create();\n\n    resolver.namespace = {\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix\n    };\n\n    __exports__[\"default\"] = resolver;\n  });","define(\"chat-app/tests/helpers/start-app\", \n  [\"ember\",\"chat-app/app\",\"chat-app/router\",\"chat-app/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Application = __dependency2__[\"default\"];\n    var Router = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    __exports__[\"default\"] = function startApp(attrs) {\n      var application;\n\n      var attributes = Ember.merge({}, config.APP);\n      attributes = Ember.merge(attributes, attrs); // use defaults, but you can override;\n\n      Ember.run(function () {\n        application = Application.create(attributes);\n        application.setupForTesting();\n        application.injectTestHelpers();\n      });\n\n      return application;\n    }\n  });","define(\"chat-app/tests/router.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - .');\n    test('router.js should pass jshint', function() { \n      ok(true, 'router.js should pass jshint.'); \n    });\n  });","define(\"chat-app/tests/routes/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - routes');\n    test('routes/application.js should pass jshint', function() { \n      ok(true, 'routes/application.js should pass jshint.'); \n    });\n  });","define(\"chat-app/tests/test-helper\", \n  [\"chat-app/tests/helpers/resolver\",\"ember-qunit\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var resolver = __dependency1__[\"default\"];\n    var setResolver = __dependency2__.setResolver;\n\n    setResolver(resolver);\n\n    document.write(\"<div id=\\\"ember-testing-container\\\"><div id=\\\"ember-testing\\\"></div></div>\");\n\n    QUnit.config.urlConfig.push({ id: \"nocontainer\", label: \"Hide container\" });\n    var containerVisibility = QUnit.urlParams.nocontainer ? \"hidden\" : \"visible\";\n    document.getElementById(\"ember-testing-container\").style.visibility = containerVisibility;\n  });","define(\"chat-app/tests/unit/controllers/application-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\"controller:application\", \"ApplicationController\", {});\n\n    // Replace this with your real tests.\n    test(\"it exists\", function () {\n      var controller = this.subject();\n      ok(controller);\n    });\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });","define(\"chat-app/tests/unit/helpers/format-date-test\", \n  [\"chat-app/helpers/format-date\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var formatDate = __dependency1__.formatDate;\n\n    module(\"FormatDateHelper\");\n\n    // Replace this with your real tests.\n    test(\"it works\", function () {\n      var result = formatDate(42);\n      ok(result);\n    });\n  });","define(\"chat-app/tests/unit/routes/application-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\"route:application\", \"ApplicationRoute\", {});\n\n    test(\"it exists\", function () {\n      var route = this.subject();\n      ok(route);\n    });\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });","define(\"chat-app/tests/unit/views/application-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\"view:application\", \"ApplicationView\");\n\n    // Replace this with your real tests.\n    test(\"it exists\", function () {\n      var view = this.subject();\n      ok(view);\n    });\n  });","define(\"chat-app/tests/views/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module('JSHint - views');\n    test('views/application.js should pass jshint', function() { \n      ok(true, 'views/application.js should pass jshint.'); \n    });\n  });","define(\"chat-app/views/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.View.extend({\n      didInsertElement: function () {\n        this.get(\"controller\").on(\"no_username\", this, this.usernameError).on(\"scrollTranscript\", this, this.scrollTranscript);\n      },\n      usernameError: function () {\n        this.$(\"#screenNameGroup\").addClass(\"has-error\");\n      },\n\n      chatThread: false, // cache the DOM lookup\n\n      scrollTranscript: function () {\n        Ember.run.next(this, function () {\n          if (this.get(\"chatThread\")) {\n            // if the node is cached\n            this.get(\"chatThread\").scrollTop(900000); // Scroll it (quicker than measuring)\n          } else {\n            this.set(\"chatThread\", this.$(\".chat-thread\")); // Cache it\n            this.get(\"chatThread\").scrollTop(900000); // Scroll it\n          }\n        });\n      }\n    });\n  });","/* jshint ignore:start */\n\ndefine('chat-app/config/environment', ['ember'], function(Ember) {\n  var prefix = 'chat-app';\n/* jshint ignore:start */\n\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = Ember['default'].$('meta[name=\"' + metaName + '\"]').attr('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  return { 'default': config };\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n/* jshint ignore:end */\n\n});\n\nif (runningTests) {\n  require(\"chat-app/tests/test-helper\");\n} else {\n  require(\"chat-app/app\")[\"default\"].create({});\n}\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnzGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"chat-app.js"}